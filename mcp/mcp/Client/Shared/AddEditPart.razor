@using mcp.Shared.ViewModels
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<div class="modal fade" id="modalPart" tabindex="-1" role="dialog" aria-labelledby="modalPartLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalPartLabel">Part @Part?.Name</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <EditForm Model="@EditPart" OnSubmit="@SubmitPart">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Part Name</label>
                                <InputText @bind-Value="EditPart.Name" class="form-control" />
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Extended Description</label>
                                <InputTextArea @bind-Value="EditPart.Description" class="form-control" rows="3"></InputTextArea>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Part Manufacturer</label>
                                <InputText @bind-Value="EditPart.Manufacturer" class="form-control" />
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Part Number</label>
                                <InputText @bind-Value="EditPart.PartNumber" class="form-control" />
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Price</label>
                                <InputNumber @bind-Value="EditPart.Price" class="form-control" step="0.01" min="0.00" />
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Link</label>
                                <InputText @bind-Value="EditPart.Link" class="form-control" />
                            </div>
                        </div>
                        <div class="col-md-6 col-sm-12">
                            <div class="form-group">
                                <label>Quantity Needed</label>
                                <InputNumber @bind-Value="EditPart.Quantity" step="1" min="1" class="form-control" />
                            </div>
                        </div>
                        <div class="col-md-6 col-sm-12">
                            <div class="form-group">
                                <label>Quantity Purchased</label>
                                <InputNumber @bind-Value="EditPart.QuantityPurchased" step="1" min="0" class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public int ProjectID { get; set; }

    [Parameter]
    public ProjectPartViewModel Part { get; set; }

    private ProjectPartViewModel EditPart { get; set; }

    protected override void OnInitialized()
    {
        if (this.Part != null)
        {
            EditPart = Part;
        }
        else
        {
            EditPart = new ProjectPartViewModel { Quantity = 1, ProjectID = ProjectID };
        }
    }

    private async void SubmitPart()
    {
        var result = await Http.PostAsJsonAsync<ProjectPartViewModel>("api/projectpart", EditPart);

        if (result.IsSuccessStatusCode)
        {
            await JSRuntime.InvokeVoidAsync("hideModal", "#modalPart");

        }
    }

}