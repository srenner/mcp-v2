@using mcp.Shared.ViewModels
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<div class="modal fade" id="@ID" tabindex="-1" role="dialog" aria-labelledby="modalPartLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalPartLabel">Part @Part?.Name</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <EditForm Model="@EditPart" OnSubmit="@SubmitPart">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12 form-group">
                            <label>Part Name</label>
                            <InputText @bind-Value="EditPart.Name" class="form-control" />
                        </div>
                        <div class="col-md-12 form-group">
                            <label>Extended Description</label>
                            <InputTextArea @bind-Value="EditPart.Description" class="form-control" rows="3"></InputTextArea>
                        </div>
                        <div class="col-xl-6 col-lg-12 form-group">
                            <label>Part Manufacturer</label>
                            <InputText @bind-Value="EditPart.Manufacturer" class="form-control" />
                        </div>
                        <div class="col-xl-6 col-lg-12 form-group">
                            <label>Part Number</label>
                            <InputText @bind-Value="EditPart.PartNumber" class="form-control" />
                        </div>

                        <div class="col-md-12 form-group">
                            <label>Link</label>
                            <InputText @bind-Value="EditPart.Link" class="form-control" />
                        </div>



                        <div class="col-xl-3 col-lg-6 col-sm-12 form-group">
                            <label>Price Each</label>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">$</span>
                                </div>
                                <InputNumber @bind-Value="EditPart.Price" class="form-control" step="0.01" min="0.00" @onchange="StateHasChanged" />
                            </div>
                        </div>

                        <div class="col-xl-3 col-lg-6 col-sm-12 form-group">
                            <label>Quantity Needed</label>
                            <InputNumber @bind-Value="EditPart.Quantity" step="1" min="1" class="form-control" @onchange="StateHasChanged" />
                        </div>

                        <div class="col-xl-3 col-lg-6 col-sm-12 form-group">
                            <label>
                                <span class="d-inline-block">Extra Cost</span>
                                <span class="d-inline-block text-right badge rounded-pill bg-light text-dark" title="shipping, tax, etc.">
                                    <span class="oi oi-info"></span>
                                </span>
                            </label>
                            <div class="input-group">
                                <div class="input-group-prepend"><span class="input-group-text">$</span></div>
                                <InputNumber @bind-Value="EditPart.ExtraCost" step="0.01" min="0.00" class="form-control" @onchange="StateHasChanged" />
                            </div>
                        </div>

                        <div class="col-xl-3 col-lg-6 col-sm-12 form-group">
                            <label>
                                <span class="d-inline-block">Total Cost</span>
                            </label>
                            <div class="input-group">
                                <div class="input-group-prepend"><span class="input-group-text">$</span></div>
                                <input class="form-control" type="number" step="0.00" min="0.00" disabled value="@EditPart.MoneyAllocated" />
                            </div>
                        </div>

                        <div class="col-xl-3 col-lg-6 col-sm-12 form-group">
                            <label>Quantity Purchased</label>
                            <InputNumber @bind-Value="EditPart.QuantityPurchased" step="1" min="0" max="@EditPart.Quantity" class="form-control" />
                        </div>

                        <div class="col-xl-3 col-lg-6 col-sm-12 form-group">
                            <label>Quantity Installed</label>
                            <InputNumber @bind-Value="EditPart.QuantityInstalled" step="1" min="0" max="@EditPart.QuantityPurchased" class="form-control" />
                        </div>
                    </div>

                    <hr>

                    <div class="form-group form-check">
                        <label class="form-check-label">
                            <InputCheckbox id="chkExcludeFromTotal" @bind-Value="EditPart.ExcludeFromTotal" class="form-check-input" />
                            <span>Put this in the 'maybe' pile</span>
                        </label>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-success">Save Part</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public string ID { get; set; }

    [Parameter]
    public int ProjectID { get; set; }

    [Parameter]
    public ProjectPartViewModel Part { get; set; }

    [Parameter]
    public EventCallback OnRefreshCallback { get; set; }

    private ProjectPartViewModel EditPart = new ProjectPartViewModel();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            //this space used to enable tooltips
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        if (this.Part != null)
        {
            EditPart = Part;
        }
        else
        {
            EditPart = new ProjectPartViewModel { Quantity = 1, ProjectID = ProjectID };
        }

        if(string.IsNullOrEmpty(ID))
        {
            ID = "modalPart";
        }
    }

    private async void SubmitPart()
    {
        if(EditPart.Link != null && EditPart.Link.Length > 0 && !EditPart.Link.ToLower().StartsWith("http"))
        {
            EditPart.Link = "http://" + EditPart.Link;
        }

        var result = new HttpResponseMessage();

        if(EditPart.ProjectPartID == 0)
        {
            result = await Http.PostAsJsonAsync<ProjectPartViewModel>("api/projectpart", EditPart);
        }
        else
        {
            result = await Http.PutAsJsonAsync<ProjectPartViewModel>("api/projectpart/" + EditPart.ProjectPartID, EditPart);
        }

        if (result.IsSuccessStatusCode)
        {
            await JSRuntime.InvokeVoidAsync("hideModal", "#" + ID);
            await OnRefreshCallback.InvokeAsync();

        }
    }

}