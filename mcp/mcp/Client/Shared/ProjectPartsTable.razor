@using mcp.Shared.ViewModels
@inject HttpClient Http


<table class="table table-striped">
    <thead>
        <tr>
            @if (!this.IsLocked)
            {
                <th></th>
            }
            <th>Part Name</th>
            <th>Description</th>
            <th>Link</th>
            <th>Price</th>
            <th>Quantity</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var part in Parts)
        {
            <tr>
                @if (!this.IsLocked)
                {
                    <td>
                        <button class="btn btn-sm btn-outline-info mr-1">
                            <span class="oi oi-pencil"></span>
                        </button>
                        <button class="btn btn-sm btn-outline-danger" @onclick="() => DeletePart(part.ProjectPartID)">
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                }
                <td>@part.Name</td>
                <td>@part.Description</td>
                <td><a href="@part.Link" target="_blank">@part.LinkText</a></td>
                <td>
                    @if (part.Price.HasValue)
                    {
                        <span>$</span>
                    }
                    @part.Price
                </td>
                <td>@part.QuantityPurchased/@part.Quantity</td>
            </tr>
        }
    </tbody>
</table>

@code {
    [Parameter]
    public List<ProjectPartViewModel> Parts { get; set; }

    [Parameter]
    public bool IsLocked { get; set; }


    private async void DeletePart(int id)
    {
        var result = await Http.DeleteAsync("api/projectpart/" + id);

        if(result.IsSuccessStatusCode)
        {
            int partsRemovedCount = Parts.RemoveAll(r => r.ProjectPartID == id);
            if(partsRemovedCount == 1)
            {
                StateHasChanged();
            }
        }
    }

}
