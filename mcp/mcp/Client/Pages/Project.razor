@page "/project/{ProjectID:int}"
@using mcp.Shared.ViewModels
@using mcp.Client.Shared
@inject HttpClient Http

<div class="alert alert-primary">
    <div>
        <h1 class="d-inline-block">

            <NavLink href="/garage" Match="NavLinkMatch.All">Garage</NavLink>
            <span> > </span>

            <NavLink href="@ProjectViewModel?.VehicleLink" Match="NavLinkMatch.All">@ProjectViewModel?.VehicleName</NavLink>

            @if (IsSubProject)
            {
                <span> > </span>
                <NavLink href="@ProjectViewModel.ParentProjectLink" Match="NavLinkMatch.All">@ProjectViewModel.ParentProjectName</NavLink>
            }

            <span> > </span>
            @if (ProjectViewModel != null)
            {
                <span>@ProjectViewModel.Name</span>
            }

        </h1>
        <div class="d-inline-block ml-4 float-right">
            @if (ProjectViewModel != null && ProjectViewModel.UserCategory != null)
            {
                <span class="badge badge-primary badge-pill mr-2"><span class="">@ProjectViewModel.UserCategory</span></span>
            }
            <button class="btn btn-sm btn-outline-primary">
                <span class="oi oi-cog"></span>
            </button>
        </div>
    </div>
    <hr>
    <p>
        @if (IsSubProject)
        {
            <span class="badge badge-primary badge-pill mr-2"><span class="">Sub-Project of @ProjectViewModel.ParentProjectName</span></span>
        }

        @if (ProjectViewModel?.Description?.Length > 0)
        {
            <span>@ProjectViewModel?.Description</span>
        }
        else
        {
            <span><em>No description available</em></span>
        }
    </p>

</div>

<div class="row mb-4">

    <!--dependencies-->
    @if (!IsSubProject)
    {
        <section class="col-xl-3 col-lg-4 col-md-6 col-sm-12 mb-2">
            <div class="card">
                <div class="card-header">
                    <h2>Project Dependencies</h2>
                </div>
                <div class="card-body">
                    @if (ProjectViewModel?.Dependencies != null && ProjectViewModel.Dependencies.Count > 0)
                    {
                        <div>
                            <p>The following projects must be completed before this project can be completed:</p>
                            <div>
                                <ProjectsList Projects="ProjectViewModel.Dependencies"></ProjectsList>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-success" role="alert">
                            This project can be completed on its own with no dependencies.
                        </div>
                    }
                </div>
            </div>
        </section>
    }

    <!--blocked-->
    @if (!IsSubProject)
    {
        <section class="col-xl-3 col-lg-4 col-md-6 col-sm-12 mb-2">
            <div class="card">
                <div class="card-header">
                    <h2>Blocked Projects</h2>
                </div>
                <div class="card-body">
                    @if (ProjectViewModel?.BlockedProjects != null && ProjectViewModel.BlockedProjects.Count > 0)
                    {
                        <div>
                            <p>The following projects can't be completed until this project is completed:</p>
                            <div>
                                <ProjectsList Projects="ProjectViewModel.BlockedProjects"></ProjectsList>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-success" role="alert">
                            This project isn't blocking any other projects.
                        </div>
                    }
                </div>
            </div>
        </section>
    }

    <!--budget-->
    <section class="col-xl-3 col-lg-4 col-md-6 col-sm-12 mb-2">
        <div class="card">
            <div class="card-header">
                <h2>Budget</h2>
            </div>
            <div class="card-body">
                <div class="progress">
                    <div class="progress-bar" role="progressbar" style="width: 25%;" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">25%</div>
                </div>
            </div>
        </div>
    </section>

    <!--progress-->
    <section class="col-xl-3 col-lg-4 col-md-6 col-sm-12 mb-2">
        <div class="card">
            <div class="card-header">
                <h2>Progress</h2>
            </div>
            <div class="card-body">
                <div class="progress">
                    <div class="progress-bar" role="progressbar" style="width: 25%;" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">25%</div>
                </div>
            </div>
        </div>
    </section>
</div>

<!--sub-projects-->
@if (!IsSubProject)
{
    <div class="row mb-4">
        <section class="col-md-12">
            <div class="card mb-2">
                <div class="card-header">
                    <h2>
                        <span>Sub-Projects</span>
                        @if (ProjectViewModel != null)
                        {
                            <button class="btn btn-primary btn-sm ml-2" data-target="#modalProject" data-toggle="modal">
                                <span class="oi oi-wrench"></span>
                                <span>Add</span>
                            </button>
                        }
                    </h2>
                </div>
                <div class="card-body">
                    @if (ProjectViewModel != null)
                    {
                        <AddEditProject ProjectID="null" ParentProjectID="@ProjectID" UserCategoryID="@ProjectViewModel.UserCategoryID" VehicleID="@ProjectViewModel.VehicleID" OnRefreshCallback="@RefreshProject"></AddEditProject>
                    }
                    @if (ProjectViewModel?.SubProjects != null && ProjectViewModel.SubProjects.Count > 0)
                    {
                        <div class="mb-2">
                            <ProjectsList Projects="ProjectViewModel.SubProjects"></ProjectsList>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">No sub-projects</div>
                    }
                </div>
            </div>
        </section>
    </div>
}

<!--notes-->
<div class="row mb-4">
    <section class="col-md-12">
        <div class="card mb-2">
            <div class="card-header">
                <h2 class="d-inline-block">
                    <span>Installation Notes</span>
                </h2>
            </div>
            <div class="card-body">
                <p>@ProjectViewModel?.InstallationNotes</p>

                <!--rich text editor mockup-->
                <div id="editor" class="pell"></div>

                <h3>Checklist</h3>
            </div>
        </div>
    </section>
</div>


<!--parts-->
<div class="row rb-4">
    <section class="col-md-12">

        <div class="card mb-2">
            <div class="card-header">
                <h2>
                    <span>Parts to Purchase <span>&amp;</span> Install</span>

                    <button class="btn btn-primary btn-sm ml-2" data-target="#modalPart" data-toggle="modal">
                        <span class="oi oi-box"></span>
                        <span>Add</span>
                    </button>
                </h2>
            </div>
            <div class="card-body">
                <div>

                    <AddEditPart Part="null" ProjectID="ProjectID" OnRefreshCallback="@RefreshParts"></AddEditPart>

                </div>

                @if (ProjectViewModel?.Parts != null && ProjectViewModel.Parts.Count > 0)
                {
                    @if (ProjectViewModel.Parts.Any(a => a.QuantityInstalled < a.Quantity))
                    {
                        <span class="badge badge-pill badge-primary d-inline-block">In Progress</span>
                    }
                    else
                    {
                        <span class="badge badge-pill badge-success d-inline-block">Complete</span>
                    }
                }

                @if (ProjectViewModel?.Parts != null && ProjectViewModel.Parts.Count > 0)
                {
                    <div>
                        <ProjectPartsTable Parts="@ProjectViewModel.Parts" IsLocked="IsPartsLocked" OnRefreshCallback="@RefreshParts"></ProjectPartsTable>
                    </div>
                }
                else
                {
                    <div class="alert alert-info" role="alert">
                        No parts to your project :(
                    </div>
                }

                @if (IsSubProject)
                {
                    <button class="btn btn-primary" data-target="#modalImportPart" data-toggle="modal">Move Parts From Main Project</button>
                    <ImportParts ProjectID="@ProjectViewModel.ProjectID" ParentProjectID="@ProjectViewModel.ParentProjectID.Value" OnRefreshCallback="@RefreshProject"></ImportParts>
                }



                @if (this.IsPartsLocked)
                {
                    <button class="btn btn-outline-danger" @onmouseover="() => iconClass = iconUnlockedClass" @onmouseout="() => iconClass = iconLockedClass" @onclick="(() => this.IsPartsLocked = false)">
                        <span class="@iconClass" aria-hidden="true"></span>
                    </button>
                }
                else
                {
                    <button class="btn btn-outline-success" @onclick="(() => this.IsPartsLocked = true)" @onmouseover="() => iconClass = iconLockedClass" @onmouseout="() => iconClass = iconUnlockedClass">
                        <span class="@iconClass" aria-hidden="true"></span>
                    </button>
                }
            </div>
        </div>


    </section>
</div>


@code {


    [Parameter]
    public int ProjectID { get; set; }


    private ProjectViewModel ProjectViewModel;
    private bool IsSubProject = false;
    private bool IsPartsLocked = true; //I like using 'Is' for bools, grammar be damned

    private static string iconLockedClass = "oi oi-lock-locked";
    private static string iconUnlockedClass = "oi oi-lock-unlocked";
    private string iconClass = iconLockedClass;

    protected override async Task OnParametersSetAsync()
    {
        await RefreshProject();
    }

    private async Task RefreshProject()
    {
        ProjectViewModel = await Http.GetFromJsonAsync<ProjectViewModel>("api/project/" + ProjectID.ToString());
        if (ProjectViewModel != null && ProjectViewModel.ParentProjectID.HasValue)
        {
            IsSubProject = true;
        }
        else
        {
            IsSubProject = false;
        }
    }

    private async Task RefreshParts()
    {
        await RefreshProject();
    }

}
