@page "/vehicle/{VehicleID:int}"
@using mcp.Shared.ViewModels
@inject HttpClient Http

<h3>@VehicleViewModel?.Name</h3>

<h4>Active Projects</h4>

@if(ActiveProjects != null)
{
    <ul>
        @foreach(var project in ActiveProjects)
        {
            <li>
                <NavLink href="@project.ProjectLink" Match="NavLinkMatch.All">@project.Name</NavLink>
            </li>
        }
    </ul>
}

<h4>Project Backlog</h4>
@if(BacklogProjects != null)
{
    <ul>
        @foreach(var project in BacklogProjects)
        {
            <li>
                <NavLink href="@project.ProjectLink" Match="NavLinkMatch.All">@project.Name</NavLink>

            </li>
        }
    </ul>
}

<h4>Completed Projects</h4>


@code {


    [Parameter]
    public int VehicleID { get; set; }


    private VehicleViewModel VehicleViewModel;

    private List<ProjectViewModel> ActiveProjects;
    private List<ProjectViewModel> BacklogProjects;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            VehicleViewModel = await Http.GetFromJsonAsync<VehicleViewModel>("api/vehicle/" + VehicleID.ToString());
            ActiveProjects = await Http.GetFromJsonAsync<List<ProjectViewModel>>("api/project/active/" + VehicleID.ToString());
            BacklogProjects = await Http.GetFromJsonAsync<List<ProjectViewModel>>("api/project/backlog/" + VehicleID.ToString());
        }
        catch
        {
            //todo
        }
        //catch (AccessTokenNotAvailableException exception)
        //{
        //    exception.Redirect();
        //}
    }

}
